function series impute (const series y, const string method)
    /* Public function for imputing missing values of 'y' by some method.
    return: series, imputed series. */

    print method
    string function_name = method_to_function_map(method)

    series ret = feval(function_name, y)

    return ret
end function


function string method_to_function_map (const string method)
    /* Mapping method to function name being called.
    return: string, Function name being called. */

    bundle Map = _(\
                   min = "impute_min",\
                   max = "impute_max",
                   mean = "impute_mean",
                   median = "quantile",
                   ffill = "first",
                   bfill = "last",
                   mode = "mode",
                   sts= "sts"\
                   )

    return Map["@method"]
end function


function series impute_mode (const series y)
    /* Compute most frequent value for each cross-sectional unit.
    return: series, constant value for each cross-sectional unit.

    Dependency: extra.gfn */

    errorif(!nobs(y), "No valid observations.")

    set skip_missing off

    scalar N = $datatype == 3 ? ($nobs / $pd) : 1
    matrix m = mshape({y}, $pd, N)
    matrix mat = mshape(NA, N, 1)

    loop i=1..N
        mat[i] = onemode(m[,i])[1]
    endloop

    set skip_missing on

    series ret = pexpand(mat)
    string desc = get_description("pmode", argname(y), -1)
    setinfo ret --description="@desc"

    return ret
end function
